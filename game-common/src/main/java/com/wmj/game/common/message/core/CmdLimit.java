// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: CommonConst.proto

package com.wmj.game.common.message.core;

/**
 * <pre>
 *1-5000 		        内部消息
 *5001-10000            网关消息
 *10001-20000           大厅消息
 *20001-100000           游戏消息
 * </pre>
 *
 * Protobuf enum {@code CmdLimit}
 */
public enum CmdLimit
    implements com.google.protobuf.ProtocolMessageEnum {
  /**
   * <code>Zero = 0;</code>
   */
  Zero(0),
  /**
   * <code>SystemBeginCmd = 1;</code>
   */
  SystemBeginCmd(1),
  /**
   * <code>SystemEndCmd = 5000;</code>
   */
  SystemEndCmd(5000),
  /**
   * <code>GateWayBeginCmd = 5001;</code>
   */
  GateWayBeginCmd(5001),
  /**
   * <code>GateWayEndCmd = 10000;</code>
   */
  GateWayEndCmd(10000),
  /**
   * <code>HallBeginCmd = 10001;</code>
   */
  HallBeginCmd(10001),
  /**
   * <code>HallEndCmd = 20000;</code>
   */
  HallEndCmd(20000),
  /**
   * <code>GameBeginCmd = 20001;</code>
   */
  GameBeginCmd(20001),
  /**
   * <code>GameEndCmd = 100000;</code>
   */
  GameEndCmd(100000),
  UNRECOGNIZED(-1),
  ;

  /**
   * <code>Zero = 0;</code>
   */
  public static final int Zero_VALUE = 0;
  /**
   * <code>SystemBeginCmd = 1;</code>
   */
  public static final int SystemBeginCmd_VALUE = 1;
  /**
   * <code>SystemEndCmd = 5000;</code>
   */
  public static final int SystemEndCmd_VALUE = 5000;
  /**
   * <code>GateWayBeginCmd = 5001;</code>
   */
  public static final int GateWayBeginCmd_VALUE = 5001;
  /**
   * <code>GateWayEndCmd = 10000;</code>
   */
  public static final int GateWayEndCmd_VALUE = 10000;
  /**
   * <code>HallBeginCmd = 10001;</code>
   */
  public static final int HallBeginCmd_VALUE = 10001;
  /**
   * <code>HallEndCmd = 20000;</code>
   */
  public static final int HallEndCmd_VALUE = 20000;
  /**
   * <code>GameBeginCmd = 20001;</code>
   */
  public static final int GameBeginCmd_VALUE = 20001;
  /**
   * <code>GameEndCmd = 100000;</code>
   */
  public static final int GameEndCmd_VALUE = 100000;


  public final int getNumber() {
    if (this == UNRECOGNIZED) {
      throw new java.lang.IllegalArgumentException(
          "Can't get the number of an unknown enum value.");
    }
    return value;
  }

  /**
   * @deprecated Use {@link #forNumber(int)} instead.
   */
  @java.lang.Deprecated
  public static CmdLimit valueOf(int value) {
    return forNumber(value);
  }

  public static CmdLimit forNumber(int value) {
    switch (value) {
      case 0: return Zero;
      case 1: return SystemBeginCmd;
      case 5000: return SystemEndCmd;
      case 5001: return GateWayBeginCmd;
      case 10000: return GateWayEndCmd;
      case 10001: return HallBeginCmd;
      case 20000: return HallEndCmd;
      case 20001: return GameBeginCmd;
      case 100000: return GameEndCmd;
      default: return null;
    }
  }

  public static com.google.protobuf.Internal.EnumLiteMap<CmdLimit>
      internalGetValueMap() {
    return internalValueMap;
  }
  private static final com.google.protobuf.Internal.EnumLiteMap<
      CmdLimit> internalValueMap =
        new com.google.protobuf.Internal.EnumLiteMap<CmdLimit>() {
          public CmdLimit findValueByNumber(int number) {
            return CmdLimit.forNumber(number);
          }
        };

  public final com.google.protobuf.Descriptors.EnumValueDescriptor
      getValueDescriptor() {
    return getDescriptor().getValues().get(ordinal());
  }
  public final com.google.protobuf.Descriptors.EnumDescriptor
      getDescriptorForType() {
    return getDescriptor();
  }
  public static final com.google.protobuf.Descriptors.EnumDescriptor
      getDescriptor() {
    return com.wmj.game.common.message.core.CommonConst.getDescriptor().getEnumTypes().get(0);
  }

  private static final CmdLimit[] VALUES = values();

  public static CmdLimit valueOf(
      com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
    if (desc.getType() != getDescriptor()) {
      throw new java.lang.IllegalArgumentException(
        "EnumValueDescriptor is not for this type.");
    }
    if (desc.getIndex() == -1) {
      return UNRECOGNIZED;
    }
    return VALUES[desc.getIndex()];
  }

  private final int value;

  private CmdLimit(int value) {
    this.value = value;
  }

  // @@protoc_insertion_point(enum_scope:CmdLimit)
}

