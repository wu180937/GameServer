// Generated by the protocol buffer compiler.  DO NOT EDIT!

package com.wmj.game.common.message.code.nano;

@SuppressWarnings("hiding")
public interface GatewayMessage {

  public static final class ping extends
      com.google.protobuf.nano.MessageNano {

    private static volatile ping[] _emptyArray;
    public static ping[] emptyArray() {
      // Lazily initializes the empty array
      if (_emptyArray == null) {
        synchronized (
            com.google.protobuf.nano.InternalNano.LAZY_INIT_LOCK) {
          if (_emptyArray == null) {
            _emptyArray = new ping[0];
          }
        }
      }
      return _emptyArray;
    }

    // .MID mid = 1;
    public int mid;

    public ping() {
      clear();
    }

    public ping clear() {
      mid = com.wmj.game.common.message.code.nano.Mid.Unknow;
      cachedSize = -1;
      return this;
    }

    @Override
    public void writeTo(com.google.protobuf.nano.CodedOutputByteBufferNano output)
        throws java.io.IOException {
      if (this.mid != com.wmj.game.common.message.code.nano.Mid.Unknow) {
        output.writeInt32(1, this.mid);
      }
      super.writeTo(output);
    }

    @Override
    protected int computeSerializedSize() {
      int size = super.computeSerializedSize();
      if (this.mid != com.wmj.game.common.message.code.nano.Mid.Unknow) {
        size += com.google.protobuf.nano.CodedOutputByteBufferNano
          .computeInt32Size(1, this.mid);
      }
      return size;
    }

    @Override
    public ping mergeFrom(
            com.google.protobuf.nano.CodedInputByteBufferNano input)
        throws java.io.IOException {
      while (true) {
        int tag = input.readTag();
        switch (tag) {
          case 0:
            return this;
          default: {
            if (!com.google.protobuf.nano.WireFormatNano.parseUnknownField(input, tag)) {
              return this;
            }
            break;
          }
          case 8: {
            int value = input.readInt32();
            switch (value) {
              case com.wmj.game.common.message.code.nano.Mid.Unknow:
              case com.wmj.game.common.message.code.nano.Mid.ChangeRoleServerReq:
              case com.wmj.game.common.message.code.nano.Mid.ChangeRoleServerRes:
              case com.wmj.game.common.message.code.nano.Mid.Ping:
              case com.wmj.game.common.message.code.nano.Mid.Pong:
              case com.wmj.game.common.message.code.nano.Mid.LoginReq:
              case com.wmj.game.common.message.code.nano.Mid.LoginRes:
              case com.wmj.game.common.message.code.nano.Mid.QuitReq:
              case com.wmj.game.common.message.code.nano.Mid.QuitRes:
                this.mid = value;
                break;
            }
            break;
          }
        }
      }
    }

    public static ping parseFrom(byte[] data)
        throws com.google.protobuf.nano.InvalidProtocolBufferNanoException {
      return com.google.protobuf.nano.MessageNano.mergeFrom(new ping(), data);
    }

    public static ping parseFrom(
            com.google.protobuf.nano.CodedInputByteBufferNano input)
        throws java.io.IOException {
      return new ping().mergeFrom(input);
    }
  }

  public static final class pong extends
      com.google.protobuf.nano.MessageNano {

    private static volatile pong[] _emptyArray;
    public static pong[] emptyArray() {
      // Lazily initializes the empty array
      if (_emptyArray == null) {
        synchronized (
            com.google.protobuf.nano.InternalNano.LAZY_INIT_LOCK) {
          if (_emptyArray == null) {
            _emptyArray = new pong[0];
          }
        }
      }
      return _emptyArray;
    }

    // .MID mid = 1;
    public int mid;

    // int64 systemTime = 2;
    public long systemTime;

    public pong() {
      clear();
    }

    public pong clear() {
      mid = com.wmj.game.common.message.code.nano.Mid.Unknow;
      systemTime = 0L;
      cachedSize = -1;
      return this;
    }

    @Override
    public void writeTo(com.google.protobuf.nano.CodedOutputByteBufferNano output)
        throws java.io.IOException {
      if (this.mid != com.wmj.game.common.message.code.nano.Mid.Unknow) {
        output.writeInt32(1, this.mid);
      }
      if (this.systemTime != 0L) {
        output.writeInt64(2, this.systemTime);
      }
      super.writeTo(output);
    }

    @Override
    protected int computeSerializedSize() {
      int size = super.computeSerializedSize();
      if (this.mid != com.wmj.game.common.message.code.nano.Mid.Unknow) {
        size += com.google.protobuf.nano.CodedOutputByteBufferNano
          .computeInt32Size(1, this.mid);
      }
      if (this.systemTime != 0L) {
        size += com.google.protobuf.nano.CodedOutputByteBufferNano
            .computeInt64Size(2, this.systemTime);
      }
      return size;
    }

    @Override
    public pong mergeFrom(
            com.google.protobuf.nano.CodedInputByteBufferNano input)
        throws java.io.IOException {
      while (true) {
        int tag = input.readTag();
        switch (tag) {
          case 0:
            return this;
          default: {
            if (!com.google.protobuf.nano.WireFormatNano.parseUnknownField(input, tag)) {
              return this;
            }
            break;
          }
          case 8: {
            int value = input.readInt32();
            switch (value) {
              case com.wmj.game.common.message.code.nano.Mid.Unknow:
              case com.wmj.game.common.message.code.nano.Mid.ChangeRoleServerReq:
              case com.wmj.game.common.message.code.nano.Mid.ChangeRoleServerRes:
              case com.wmj.game.common.message.code.nano.Mid.Ping:
              case com.wmj.game.common.message.code.nano.Mid.Pong:
              case com.wmj.game.common.message.code.nano.Mid.LoginReq:
              case com.wmj.game.common.message.code.nano.Mid.LoginRes:
              case com.wmj.game.common.message.code.nano.Mid.QuitReq:
              case com.wmj.game.common.message.code.nano.Mid.QuitRes:
                this.mid = value;
                break;
            }
            break;
          }
          case 16: {
            this.systemTime = input.readInt64();
            break;
          }
        }
      }
    }

    public static pong parseFrom(byte[] data)
        throws com.google.protobuf.nano.InvalidProtocolBufferNanoException {
      return com.google.protobuf.nano.MessageNano.mergeFrom(new pong(), data);
    }

    public static pong parseFrom(
            com.google.protobuf.nano.CodedInputByteBufferNano input)
        throws java.io.IOException {
      return new pong().mergeFrom(input);
    }
  }
}
